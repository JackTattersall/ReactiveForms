version: 2
jobs:
  build:
    working_directory: ~/my-project
    docker:
      - image: circleci/node:6.10-browsers
    steps:
      - checkout
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      - restore_cache:
          key: my-project-{{ .Branch }}-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          key: my-project-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - "node_modules"
      - run:
          name: Linting
          command: npm run lint
#      - run:
#          name: Unit Tests
#          command: xvfb-run -a npm run test -- --single-run --no-progress --browser=ChromeNoSandbox
#      - run:
#          name: e2e Tests
#          command: xvfb-run -a npm run e2e -- --no-progress --config=protractor-ci.conf.js
      # Build project with different configuration based on
      # the current branch
      - run:
          name: Building
          command: |
              if [ "${CIRCLE_BRANCH}" == "staging" ]; then
                  npm run build-staging
              elif [ "${CIRCLE_BRANCH}" == "master" ]; then
                  npm run build-prod
              else
                  npm run build-dev
              fi
      # Cache the dist folder for the deploy job
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
              - dist
  deploy:
    working_directory: ~/project
    docker:
        - image: circleci/node:6.10-browsers
    steps:
        # Log the current branch
        - run:
            name: Show current branch
            command: echo ${CIRCLE_BRANCH}
        # Restore cache from the build job which contains the
        # dist folder that needs to be deployed
        - restore_cache:
            key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
        # Install Firebase cli
        - run:
            name: Install Firebase cli
            command:
                npm install -g firebase-tools@3.13.1
        # Deploy to the firebase app corresponding to the current branch
        - run:
            name: Deploy to Firebase
            commands:
                - |
                if [ "${CIRCLE_BRANCH}" == "development" ]; then
                    firebase use development
                elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
                    firebase use staging
                elif [ "${CIRCLE_BRANCH}" == "master" ]; then
                    firebase use master
                fi
                - firebase deploy --token=$FIREBASE_TOKEN --non-interactive

workflows:
    version: 2
    # The build and deploy workflow
    build_and_deploy:
        jobs:
            - build
            # The deploy job will only run on the filtered branches and
            # require the build job to be successful before it starts
            - deploy:
                requires:
                    - build
                filters:
                    branches:
                        only:
                            - develop
                            - staging
                            - master
